# action.yml
name: "Codacy CLI V2"
author: "Codacy"
description: "Execute Codacy code analysis using your remote Codacy configuration"
branding:
  icon: "check"
  color: "gray-dark"
inputs:
  tool:
    required: false
    description: >-
      Only run a specific tool or tool category (eslint, stylelint, etc).
      For the full list of tools, see https://docs.codacy.com/repositories-configure/codacy-configuration-file/#which-tools-can-be-configured-and-which-name-should-i-use
      default: "eslint"
  sarif_file_path:
    required: false
    description: >-
      The path to the SARIF file to upload.
    default: "./report.sarif"
  upload_report:
    required: false
    description: >-
      Upload the report to Codacy.
    default: "false"
  project_token:
    required: true
    description: >-
      The project token to use for the analysis.
  api_token:
    required: false
    description: >-
      User level token for Codacy API.
  provider:
    required: false
    description: >-
      Provider name (e.g., gh, gl, bb).
  owner:
    required: false
    description: >-
      Repository owner.
  repository:
    required: false
    description: >-
      Repository name.
  
runs:
  using: "composite"
  steps:
    - name: "Set Global Variables"
      shell: bash
      run: |
        echo "COMMIT_SHA=$(if [ "${{ github.event_name }}" == "pull_request" ]; then echo "${{ github.event.pull_request.head.sha }}"; else echo "${{ github.sha }}"; fi)" >> "$GITHUB_ENV"
    - name: "Set-up CLI V2"
      shell: bash
      run: |
        echo "Setting up CLI V2"
        curl -Ls https://raw.githubusercontent.com/codacy/codacy-cli-v2/main/codacy-cli.sh -o /tmp/codacy-cli-v2
        chmod +x /tmp/codacy-cli-v2
        /tmp/codacy-cli-v2 install
        echo "CLI V2 setup complete"
    - name: "Run the tool"
      shell: bash
      run: |
        echo "Running the tool"
        /tmp/codacy-cli-v2 analyze -t ${{inputs.tool}} -o ${{inputs.sarif_file_path}}
        echo "Tool run complete"
    - name: "Upload the results"
      shell: bash
      run: |
        if [ "${{ inputs.upload_report }}" == "true" ]; then
          echo "Uploading the results"
           if [ "${{ inputs.project_token }}" == "" ]; then
            echo "Using API token"
            /tmp/codacy-cli-v2 upload -s ${{inputs.sarif_file_path}} -c $COMMIT_SHA -a ${{inputs.api_token}} -p ${{inputs.provider}} -o ${{inputs.owner}} -r ${{inputs.repository}}
           else
            echo "Using project token"
            /tmp/codacy-cli-v2 upload -s ${{inputs.sarif_file_path}} -c $COMMIT_SHA -t ${{inputs.project_token}}
           fi
          echo "Results uploaded"
        else
          echo "Upload skipped"
        fi
